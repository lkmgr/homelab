{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":automergeDigest",
    ":automergeBranch",
    "github>lkmgr/homelab//.renovate/allowedVersions.json5",
    "github>lkmgr/homelab//.renovate/autoMerge.json5",
    "github>lkmgr/homelab//.renovate/commitMessage.json5",
    "github>lkmgr/homelab//.renovate/groups.json5",
    "github>lkmgr/homelab//.renovate/labels.json5",
    "github>lkmgr/homelab//.renovate/semanticCommits.json5",
  ],
  "timezone": "Europe/Berlin",
  "commitBodyTable": true,
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "rebaseWhen": "conflicted",
  "suppressNotifications": ["prIgnoreNotification"],
  "flux": {
    "fileMatch": [
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "(^|/)\\.taskfiles/.+\\.ya?ml(\\.j2)?$",
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml$"
    ]
  },
  "kustomize": {
    "fileMatch": [
      "(^|/)kustomization\\.ya?ml(\\.j2)?$"
    ]
  },
  "npm": {
    "rangeStrategy": "bump"
  },
  "customManagers": [
    {
      "customType": "regex",
      "description": "Process various other dependencies",
      "fileMatch": [
        "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
        "(^|/)kubernetes/.+\\.ya?ml$"
      ],
      "matchStrings": [
        // Example: `k3s_release_version: "v1.27.3+k3s1"`
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n",
        // Example: `- https://github.com/rancher/system-upgrade-controller/releases/download/v0.11.0/crd.yaml`
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n",
        // Example: apiVersion=helm.cattle.io/v1 kind=HelmChart
        "datasource=(?<datasource>\\S+)\n.*?repo: (?<registryUrl>\\S+)\n.*?chart: (?<depName>\\S+)\n.*?version: (?<currentValue>\\S+)\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "description": "Process CloudnativePG Postgresql version",
      "fileMatch": [
        "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$"
      ],
      "matchStrings": [
        "imageName: (?<depName>\\S+):(?<currentValue>.*\\-.*)"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "redhat"
    },
    {
      "customType": "regex",
      "description": "Process Pulumi docker image versions in config file",
      "fileMatch": [
        "(^|/)Pulumi.*\\.ya?ml$"
      ],
      "matchStrings": [
        // Example: `nginx:image: nginx:alpine3.17`
        "(?<depName>[\\w.-]+):image:\\s+(?<packageName>[\\w.-\/]+):(?<currentValue>[\\w.-]+)"
      ],
      "datasourceTemplate": "docker"
    }
  ],
  "packageRules": [
    // custom versioning
    {
      "description": "Use custom versioning for Minio",
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z$",
      "matchPackagePatterns": ["minio"]
    },
    {
      "description": "Use custom versioning for k3s",
      "matchDatasources": ["github-releases"],
      "versioning": "regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(?<compatibility>\\+k3s)(?<build>\\d+)$",
      "matchPackagePatterns": ["k3s"]
    },
  ]
}
