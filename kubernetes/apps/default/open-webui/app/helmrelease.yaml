---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: open-webui
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      open-webui:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: 0.6.13@sha256:ddc64d14ec933e8c1caf017df8a0068bece3e35acbc59e4aa4971e5aa4176a72
            env:
              TZ: "${TIMEZONE}"
              ENABLE_OLLAMA_API: false
              ENABLE_RAG_WEB_SEARCH: true
              RAG_WEB_SEARCH_ENGINE: "duckduckgo"
              ENABLE_WEBSOCKET_SUPPORT: true
              WEBSOCKET_REDIS_URL: "redis://localhost:6379/0"
              REDIS_URL: "redis://localhost:6379/0"
              WEBUI_AUTH_TRUSTED_EMAIL_HEADER: "Remote-Email"
              WEBUI_AUTH_TRUSTED_NAME_HEADER: "Remote-Name"
            envFrom:
              - secretRef:
                  name: open-webui-secret
            # resources:
            #   requests:
            #     cpu: 50m
            #     memory: 300Mi
          redis:
            image:
              repository: docker.io/valkey/valkey
              tag: 8.1.1@sha256:a19bebed6a91bd5e6e2106fef015f9602a3392deeb7c9ed47548378dcee3dfc2
            ports:
              - containerPort: 6379
    service:
      app:
        controller: open-webui
        ports:
          http:
            port: 8080
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: "chat.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: "${PVC_NAME}"
        globalMounts:
          - path: /app/backend/data
    networkpolicies:
      main:
        controller: open-webui
        policyTypes:
          - Ingress
        rules:
          ingress:
            - from:
                - namespaceSelector: {}
                  podSelector:
                    matchLabels:
                      app.kubernetes.io/name: ingress-nginx
