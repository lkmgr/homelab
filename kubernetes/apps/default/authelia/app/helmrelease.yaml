---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authelia
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      authelia:
        replicas: 1
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.39.4@sha256:64b356c30fd817817a4baafb4dbc0f9f8702e46b49e1edb92ff42e19e487b517
            command: ["authelia"]
            args: ["--config", "/config/configuration.yaml"]
            env:
              TZ: "${TIMEZONE}"
              AUTHELIA_SERVER_PORT: &port 80
              # prevents 431 request header too large
              # https://www.authelia.com/reference/guides/log-messages/#request-header-too-large
              AUTHELIA_SERVER_BUFFERS_READ: 16384
              AUTHELIA_SERVER_BUFFERS_WRITE: 16384
              AUTHELIA_STORAGE_LOCAL_PATH: /data/db.sqlite3
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
              limits:
                memory: 200Mi
    service:
      app:
        controller: authelia
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: "auth.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: "${PVC_NAME}"
        globalMounts:
          - path: /data
      config:
        type: secret
        name: authelia-config-secret
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true
      users:
        type: secret
        name: authelia-users-secret
        globalMounts:
          - path: /config/users.yaml
            subPath: users.yaml
            readOnly: true
