---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    defaultPodOptions:
      nodeSelector:
        feature.node.kubernetes.io/custom-sonoff-zigbee: "true"
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      # TODO: Run as 1000:1000
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2025.1.4
            env:
              TZ: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: pg-home-assistant-user
            # probes:
            #   liveness:
            #     enabled: false
            #   readiness:
            #     enabled: false
            #   startup:
            #     enabled: false
            resources:
              requests:
                memory: 750Mi
                cpu: 200m
              limits:
                memory: 2500Mi
          appdaemon:
            image:
              repository: docker.io/acockburn/appdaemon
              tag: 4.4.2
            env:
              TZ: "${TIMEZONE}"
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.97.2
            env:
              TZ: "${TIMEZONE}"
            args:
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - "--port"
              - "12321"
              - /config
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1Gi
    service:
      app:
        controller: home-assistant
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          io.cilium/lb-ipam-ips: "${VIP_HOME_ASSISTANT}"
        ports:
          http:
            port: 8123
          homekit:
            port: 21063
          code-server:
            port: 12321
    ingress:
      app:
        className: nginx
        annotations:
          external.home.arpa/enabled: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: "dex.${SECRET_DOMAIN}"
        hosts:
          - host: "ha.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      code-server:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: "ha-config.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: code-server
    persistence:
      config:
        existingClaim: "${PVC_NAME}"
        advancedMounts:
          home-assistant:
            app:
              - path: /config
            appdaemon:
              - path: /conf
                subPath: appdaemon
            code-server:
              - path: /config
      dbus:
        type: hostPath
        hostPath: /run/dbus
        advancedMounts:
          home-assistant:
            app:
              - path: /run/dbus
      # Workaround for https://github.com/home-assistant/core/issues/133537
      temp:
        type: emptyDir
        advancedMounts:
          home-assistant:
            app:
              - path: /.dockerenv
                subPath: .dockerenv
