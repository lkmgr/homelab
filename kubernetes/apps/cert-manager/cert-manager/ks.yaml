---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cluster-apps-cert-manager
  namespace: flux-system
spec:
  targetNamespace: cert-manager
  commonMetadata:
    labels:
      app.kubernetes.io/name: cert-manager
  path: ./kubernetes/apps/cert-manager/cert-manager/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  timeout: 5m
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cluster-apps-cert-manager-issuers
  namespace: flux-system
spec:
  targetNamespace: cert-manager
  commonMetadata:
    labels:
      app.kubernetes.io/name: cert-manager-issuers
  dependsOn:
    - name: cluster-apps-cert-manager
    - name: cluster-apps-external-secrets-stores
  healthCheckExprs:
    - apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
  path: ./kubernetes/apps/cert-manager/cert-manager/issuers
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  timeout: 5m
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cluster-apps-cert-manager-certificates
  namespace: flux-system
spec:
  targetNamespace: cert-manager
  commonMetadata:
    labels:
      app.kubernetes.io/name: cert-manager-certificates
  dependsOn:
    - name: cluster-apps-cert-manager-issuers
  healthCheckExprs:
    - apiVersion: cert-manager.io/v1
      kind: Certificate
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
  path: ./kubernetes/apps/cert-manager/cert-manager/certificates
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  timeout: 5m
