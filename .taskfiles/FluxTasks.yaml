---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  install:
    desc: Install Flux into your cluster
    cmds:
      - kubectl apply --kustomize {{.KUBERNETES_DIR}}/bootstrap
      - cat {{.SOPS_AGE_KEY_FILE}} | kubectl -n flux-system create secret generic sops-age --from-file=age.agekey=/dev/stdin
      - sops --decrypt {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.sops.yaml | kubectl apply -f -
      - kubectl apply -f {{.KUBERNETES_DIR}}/flux/vars/cluster-settings.yaml
      - sops --decrypt {{.KUBERNETES_DIR}}/bootstrap/cluster-extra-deploy-key.sops.yaml | kubectl apply -f -
      - kubectl apply --kustomize {{.KUBERNETES_DIR}}/flux/config
    preconditions:
      - { msg: 'Missing kubeconfig', sh: 'test -f {{.KUBECONFIG_FILE}}' }
      - {
          msg: 'Flux already installed',
          sh: 'kubectl get namespace flux-system --kubeconfig {{.KUBECONFIG_FILE}} &>/dev/null && exit 1 || exit 0',
        }
      - { msg: 'Missing Sops Age key file', sh: 'test -f {{.SOPS_AGE_FILE}}' }
    vars:
      SOPS_AGE_KEY_FILE: '{{.ROOT_DIR}}/age.key'

  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    cmd: flux reconcile -n flux-system kustomization cluster --with-source

  hr-restart:
    desc: Restart all failed Helm Releases
    cmds:
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux suspend hr $0 -n $1'
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux resume hr $0 -n $1'
